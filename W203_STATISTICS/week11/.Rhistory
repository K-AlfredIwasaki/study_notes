setwd("C:/Users/K/Desktop/Berkeley/00_Academics/W203 STATS/hw11")
closeAllConnections()
rm(list=ls())
load("GPA1.rdata")
setwd("C:/Users/K/Desktop/Berkeley/00_Academics/W203 STATS/hw11")
load("GPA1.rdata")
setwd("C:/Users/K/Desktop/Berkeley/00_Academics/W203 STATS/week11")
load("GPA1.rdata")
head(data)
plot(jitter(data$ACT), jitter(data$colGPA), xlab = "ACT score", ylab = "College GPA",
main = "College GPA versus ACT score")
(model1 = lm(colGPA ~ ACT, data = data))
abline(model1)
(model1 = lm(colGPA ~ ACT, data = data))
abline(model1)
plot(jitter(data$ACT), jitter(data$colGPA), xlab = "ACT score", ylab = "College GPA",
main = "College GPA versus ACT score")
abline(model1)
abline(model1)
(model1 = lm(colGPA ~ ACT, data = data))
abline(model1)
abline(model1)
plot(jitter(data$ACT), jitter(data$colGPA), xlab = "ACT score", ylab = "College GPA",
main = "College GPA versus ACT score")
plot(jitter(data$ACT), jitter(data$colGPA), xlab = "ACT score", ylab = "College GPA",
main = "College GPA versus ACT score")
abline(model1)
plot(model1$fitted.values, model1$residuals,
main = "Residuals vs. Fitted values for GPA data",
xlab = "Fitted values", ylab = "Residuals")
plot(model1, which = 1)
plot(model1, which = 5)
ACT_with_error = data$ACT
ACT_with_error[5] = 80
model1_with_error = lm(data$colGPA ~ ACT_with_error)
plot(model1_with_error, which = 5, main = "GPA Data with Error Introduced")
summary(data$hsGPA)
hist(data$hsGPA, breaks = 20)
scatterplotMatrix(data[,c("colGPA", "ACT", "hsGPA")], diagonal = "histogram")
library(car)
scatterplotMatrix(data[,c("colGPA", "ACT", "hsGPA")], diagonal = "histogram")
model2 = lm(colGPA ~ ACT + hsGPA, data = data)
plot(model2, which = 1, main = "Model 2 for college GPA")
(model2 = lm(colGPA ~ ACT + hsGPA, data = data))
summary(model1)$r.square
summary(model2)$r.square
summary(model1)$r.square
AIC(model1)
AIC(model2)
library("stargazer")
install.packages("stargazer")
library("stargazer")
stargazer(model1, model2, tyep = "latex", report = "vc",
header = FALSE,
title = "Linear Models Predicting College GPA",
keep.stat = c("aic", "rsq", "n"),
omit.table.layout = "n")
stargazer(model1, model2)
?stargazer
stargazer(model1, model2, tyep = "html", report = "vc",
header = FALSE,
title = "Linear Models Predicting College GPA",
keep.stat = c("aic", "rsq", "n"),
omit.table.layout = "n")
stargazer(model1, model2, type = "html", report = "vc",
header = FALSE,
title = "Linear Models Predicting College GPA",
keep.stat = c("aic", "rsq", "n"),
omit.table.layout = "n")
stargazer(model1, model2, type = "text", report = "vc",
header = FALSE,
title = "Linear Models Predicting College GPA",
keep.stat = c("aic", "rsq", "n"),
omit.table.layout = "n")
setwd("C:/Users/K/Desktop/Berkeley/00_Academics/W203 STATS/week12")
rm(list=ls())
closeAllConnections()
setwd("C:/Users/K/Desktop/Berkeley/00_Academics/W203 STATS/week12")
setwd("C:/Users/K/Desktop/Berkeley/00_Academics/W203 STATS/week12")
library(lmtest)
library(sandwich)
library(stargazer)
library(car)
load("Wage1.rdata")
load("wage1.rdata")
setwd("C:/Users/K/Desktop/Berkeley/00_Academics/W203 STATS/week12")
setwd("C:/Users/K/Desktop/Berkeley/00_Academics/W203 STATS/week12")
load("wage1.rdata")
setwd("C:/Users/K/Desktop/Berkeley/00_Academics/W203 STATS/week12")
load("wage1.rdata")
ls()
desc
summary(data)
str(data)
nrow(data)
scatterplotMatrix(data[, c("wage", "educ", "exper")])
summary(data$wage)
hist(data$wage, breaks = 50, main = "Hourly Wage", xlab = "dollars")
summary(data$educ)
hist(data$educ, breaks = 0:20 -0.5,
main = "Years of Education", xlab = NULL)
hist(data$exper, breaks = 1:52-.5,
main = "Years of Potential Experience", xlab = NULL)
model1 = lm(wage ~ educ + exper, data = data)
summary(model1)
plot(model1)
hist(model1$residuals, breaks = 50)
shapiro.test(model1$residuals)
hist(model1$residuals, breaks = 50)
shapiro.test(model1$residuals)
bptest(model1)
coeftest(model1, vcov = vcovHC)
vcovHC(model1)
coeftest(model1, vcov = vcovHC)
model2 = lm(log(wage) ~ educ + exper, data = data)
plot(model2)
hist(model2$residuals, breaks = 50)
coeftest(model2, vcov = vcovHC)
stargazer(model1, model2, type = "text", moit.stat = "f",
se = list(se.model1, se.model2),
star.cutoffs = c(0.05, 0.01, 0.001))
# we need the vectors of robust standard errors
# we can get these from the coeftest output
(se.model1 = coeftest(model1, vcov = vcovHC)[, "Std. Error"])
# or directory from the robust covariance matrix
(se.model1 = sqrt(diag(vcovHC(model1))))
(se.model2 = sqrt(diag(vcovHC(model2))))
stargazer(model1, model2, type = "text", moit.stat = "f",
se = list(se.model1, se.model2),
star.cutoffs = c(0.05, 0.01, 0.001))
knitr::opts_chunk$set(echo = TRUE)
data = read.table("videos.txt")
closeAllConnections()
rm(list=ls())
setwd("C:/Users/K/Desktop/Berkeley/00_Academics/W203 STATS/hw12")
data = read.table("videos.txt")
data = read.table("videos.txt", fill = TRUE, header = TRUE)
head(data)
sapply(data, function(x) sum(is.na(x))) # number of na in each col
nrow(data)
sapply(data, function(x) sum(is.na(x)))
scatterplotMatrix(data[, c("views", "length", "rate")])
library(car)
scatterplotMatrix(data[, c("views", "length", "rate")])
summary(data$views)
hist(data$views)
summary(data$views)
head(data)
summary(data$length)
hist(data$views)
hist(data$length)
as.numeric(levels(data$views))[data$views]
data$views
data[10:15,]
data[1:50,]
data = read.table("videos.txt", fill = TRUE, header = TRUE)
head(data)
nrow(data)
sapply(data, function(x) sum(is.na(x)))
data$views = as.numeric(levels(data$views))[data$views]
data$views
summary(data$views)
data$views = as.numeric(levels(data$views))[data$views]
data$length = as.numeric(levels(data$length))[data$length]
data$rate = as.numeric(levels(data$rate))[data$rate]
data$rate
sapply(data, function(x) sum(is.na(x)))
summary(data$views)
hist(data$views)
data$views
data = read.table("videos.txt", fill = TRUE, header = TRUE)
head(data)
nrow(data)
sapply(data, function(x) sum(is.na(x)))
scatterplotMatrix(data[, c("views", "length", "rate")])
data$views = as.numeric(levels(data$views))[data$views]
data$length = as.numeric(levels(data$length))[data$length]
sapply(data, function(x) sum(is.na(x)))
scatterplotMatrix(data[, c("views", "length", "rate")])
summary(data$views)
hist(data$views)
hist(data$views, breaks = 100)
hist(data$views, breaks = 1000)
hist(sqrt(data$views), breaks = 1000)
hist(data$views, breaks = 1000)
summary(data$length)
hist(data$length)
hist(data$length, breaks = 1000)
hist(data$rate, breaks = 1000)
summary(data$rate)
summary(data$length)
data[1:100,]
data[, c(1, 2, 3)]
data
data[complete.cases(data[, c("length", "views", "rate")]),]
data = data[complete.cases(data[, c("length", "views", "rate")]),]
scatterplotMatrix(data[, c("views", "length", "rate")])
summary(data$views)
hist(data$views, breaks = 1000)
summary(data$length)
hist(data$length, breaks = 1000)
summary(data$rate)
hist(data$rate, breaks = 1000)
hist(data$length, breaks = 1000)
data[data$length > 1000, ]
hist(data$views, breaks = 1000)
data[data$views > 500000, ]
hist(data$rate, breaks = 1000)
library(lmtest)
library(sandwich)
library(stargazer)
library(car)
model1 = lm(views ~ length + rate, data = data)
(model1 = lm(views ~ length + rate, data = data))
plot(model1)
plot(model2)
(model2 = lm(sqrt(views) ~ length + rate, data = data))
plot(model2)
plot(data$length, data$rate)
plot(model1)
plot(model2)
nrow(data)
bptest(model1)
coeftest(model1, vcov = vcovHC)
