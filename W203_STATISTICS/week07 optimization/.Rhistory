n = 3
p = 0.5
sample(c(0,1), 3, prob = c(1-p, p), replace= TRUE)
n = 3
p = 0.5
sample(c(0,1), 3, prob = c(1-p, p), replace= TRUE)
rbinom(3, size=1, prob=0.5)
s =  sample(c(0,1), 3, prob = c(1-p, p), replace= TRUE)
s
s.plot()
plot(s)
s =  mean(sample(c(0,1), 3, prob = c(1-p, p), replace= TRUE))
plot(s)
s =  mean(sample(c(0,1), size=3, prob = c(1-p, p), replace= TRUE))
s =  mean(sample(c(0,1), size=3, prob = c(1-p, p), replace= TRUE))
plot(s)
plot(s)
s =  mean(sample(c(0,1), size=3, prob = c(1-p, p), replace= TRUE))
plot(s)
myvector <- vector("numeric", 10L)
myvector <- vector("numeric", 10L)
for(i in 1:10) {
myvector[i] <- mean(sample(c(0,1), size=3, prob = c(1-p, p), replace= TRUE))
}
plot(myvector)
myvector <- vector("numeric", 10L)
for(i in 1:100) {
myvector[i] <- mean(sample(c(0,1), size=3, prob = c(1-p, p), replace= TRUE))
}
plot(myvector)
myvector <- vector("numeric", 10L)
for(i in 1:100) {
myvector[i] <- mean(sample(c(0,1), size=10, prob = c(1-p, p), replace= TRUE))
}
plot(myvector)
n = 100
p = 0.5
myvector <- vector("numeric", 10L)
for(i in 1:1000) {
myvector[i] <- mean(sample(c(0,1), size=n, prob = c(1-p, p), replace= TRUE))
}
plot(myvector)
hist(myvector)
hist(myvector, bin=100)
hist(myvector, bins=100)
?hist
myvector <- vector("numeric", 10L)
for(i in 1:1000) {
myvector[i] <- mean(sample(c(0,1), size=n, prob = c(1-p, p), replace= TRUE))
}
hist(myvector, bins=100)
hist(myvector)
hist(myvector)
ggplot(myvector) +
geom_histogram()
library(ggplot2)
ggplot(myvector) +
geom_histogram()
hist(myvector, breaks=20)
hist(myvector)
c(0:1, 0.01)
c(0, 1, 0.01)
seq(from = 0, to = 1, by = 0.1)
seq(from = 0, to = 1, by = 0.01)
hist(myvector, breaks = seq(from = 0, to = 1, by = 0.01))
hist(myvector, breaks = seq(from = 0, to = 1, by = 0.1))
hist(myvector, breaks = seq(from = 0, to = 1, by = 0.05))
n = 10
p = 0.5
myvector <- vector("numeric", 10L)
for(i in 1:1000) {
myvector[i] <- mean(sample(c(0,1), size=n, prob = c(1-p, p), replace= TRUE))
}
hist(myvector, breaks = seq(from = 0, to = 1, by = 0.05))
n = 10
p = 0.5
myvector <- vector("numeric", 10L)
for(i in 1:10000) {
myvector[i] <- mean(sample(c(0,1), size=n, prob = c(1-p, p), replace= TRUE))
}
hist(myvector, breaks = seq(from = 0, to = 1, by = 0.05))
n = 10
p = 0.5
myvector <- vector("numeric", 10L)
for(i in 1:10000) {
myvector[i] <- mean(sample(c(0,1), size=n, prob = c(1-p, p), replace= TRUE))
}
hist(myvector, breaks = seq(from = 0, to = 1, by = 0.01))
n = 10
p = 0.5
myvector <- vector("numeric", 10L)
for(i in 1:10000) {
myvector[i] <- mean(sample(c(0,1), size=n, prob = c(1-p, p), replace= TRUE))
}
hist(myvector, breaks = seq(from = 0, to = 1, by = 0.1))
myvector <- vector("numeric", 10L)
for(i in 1:100000) {
myvector[i] <- mean(sample(c(0,1), size=n, prob = c(1-p, p), replace= TRUE))
}
hist(myvector, breaks = seq(from = 0, to = 1, by = 0.1))
stedv(myvector)
stdev(myvector)
sd(myvector)
myvector <- vector("numeric", 10L)
for(i in 1:1000) {
myvector[i] <- mean(sample(c(0,1), size=n, prob = c(1-p, p), replace= TRUE))
}
hist(myvector, breaks = seq(from = 0, to = 1, by = 0.1))
sd(myvector)
library(moments)
install.packages(moments)
install.packages("moments")
skewness(rbinom(100000, size = 1, prob = .001))
library(moments)
skewness(rbinom(100000, size = 1, prob = .001))
# initialize
n = 3
p = 0.001
myvector <- vector("numeric", 10L)
for(i in 1:10000) {
myvector[i] <- mean(sample(c(0,1), size=n, prob = c(1-p, p), replace= TRUE))
}
# initialize
n = 3
p = 0.001
myvector <- vector("numeric", 10L)
for(i in 1:100000) {
myvector[i] <- mean(sample(c(0,1), size=n, prob = c(1-p, p), replace= TRUE))
}
hist(myvector, breaks = seq(from = 0, to = 1, by = 0.1))
skewness(myvector)
# initialize
n = 3
p = 0.001
myvector <- vector("numeric", 10L)
for(i in 1:1000) {
myvector[i] <- mean(sample(c(0,1), size=n, prob = c(1-p, p), replace= TRUE))
}
# histogram
hist(myvector, breaks = seq(from = 0, to = 1, by = 0.1))
load("sleep.Rdata")
getwd()
load("sleep.Rdata")
load(sleep.Rdata)
setwd("C:/Users/K/Desktop/Berkeley/00_Academics/01_2017 Summer/W203 STATS/week07")
load(sleep.Rdata)
load("sleep.Rdata")
sleep
sleep$min
---------------------------------------------------------
set.seed(898)
?faithful
eruptions = faithful$eruptions
str(eruptions)
hist(eruptions, breaks = 50, xlim=c(1,6))
mean(eruptions)
n1 <- 3
samp1 <- sample(eruptions, size = n1, replace = T)
samp1
mean(samp1)
mean(samp1)
draws <- replicate(1000, mean(sample(eruptions, size = n1, replace=T)))
draws
hist(draws, breaks = 50, xlim=c(1, 6))
hist(draws, breaks = 50, xlim=c(1, 6))
hist(draws, breaks = 50, xlim=c(1, 6),
main = "simulated sample means from repeated sampling")
hist(draws, breaks = 50, xlim=c(1, 6),
main = "simulated sample means from repeated sampling")
hist(draws, breaks = 50, xlim=c(1, 6),
main = "simulated sample means from repeated sampling")
optimize(f, interval = c(0, 100), maximum = TRUE)
f <- function(p) {
-p^2 + p + 2
}
optimize(f, interval = c(0, 100), maximum = TRUE)
